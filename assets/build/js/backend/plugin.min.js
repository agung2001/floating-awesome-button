/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/ts/backend/plugin.ts":
/*!*************************************!*\
  !*** ./assets/ts/backend/plugin.ts ***!
  \*************************************/
/***/ (function() {

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
/** Global Class */
window.FAB_PLUGIN = __assign(__assign({}, window.FAB_PLUGIN), { 
    /**
     * Define Default Option
     * */
    defaultOptions: __assign(__assign({}, window.FAB_PLUGIN.defaultOptions), { select2: { placeholder: '--choose--' } }), 
    /** Page: Setting, Initiate Scripts */
    init_setting: function () {
        /** Initiate Select2 Setting */
        window.FAB_PLUGIN.init_setting_animation(); // Animation.
        window.FAB_PLUGIN.init_setting_design(); // Template.
        /** Initiate Select2 */
        jQuery('#setting-form .select2').select2();
        /** Initiate Color Picker */
        jQuery('.colorpicker').wpColorPicker();
        /** Trigger Section */
        jQuery(document).on('change.select2', '#setting-form .select2[name="field_option_animation_logo"]', window.FAB_PLUGIN.triggerSectionAnimateLogo);
        /** Trigger Others */
        window.FAB_PLUGIN.triggerOptionSettingValue();
        window.FAB_PLUGIN.triggerResetOptionButton();
    }, 
    /** Init Animation Setting */
    init_setting_animation: function () {
        /** Initiate Animation */
        jQuery('.field_option_animation_element').each(function () {
            /** Ignore Animation FAB */
            if (jQuery(this).attr('id') === 'field_option_animation_fab')
                return true;
            /** Set Animation */
            var animationDOM = jQuery(this);
            animationDOM.select2({
                data: window.FAB_PLUGIN.animateCSSAnimation
            });
            var selected = animationDOM.data('selected');
            if (selected) {
                animationDOM.val(selected);
                animationDOM.trigger('change');
            }
        });
        /** Additional Animation FAB */
        var animationDOM = jQuery('#field_option_animation_fab');
        var data = __spreadArray([], window.FAB_PLUGIN.animateCSSAnimation, true);
        data.splice(1, 0, { id: 'ripple', text: 'Ripple' });
        animationDOM.select2({ data: data });
        var selected = animationDOM.data('selected');
        if (selected) {
            animationDOM.val(selected);
            animationDOM.trigger('change');
        }
    }, 
    /** Init Design Setting */
    init_setting_design: function () {
        /** Layout  Position */
        var dom = jQuery('#field_option_design_layout_position');
        dom.select2({
            placeholder: '--choose--',
            data: window.FAB_PLUGIN.defaultOptions.layout.position
        });
        dom.val(dom.data('selected'));
        dom.trigger('change');
        /** Template Name */
        dom = jQuery('#field_option_design_template_name');
        dom.select2({
            placeholder: '--choose--',
            data: window.FAB_PLUGIN.defaultOptions.template.name
        });
        dom.val(dom.data('selected'));
        dom.trigger('change');
        /** Template Name */
        dom = jQuery('#field_option_design_template_shape');
        dom.select2({
            placeholder: '--choose--',
            data: window.FAB_PLUGIN.defaultOptions.template.shape
        });
        dom.val(dom.data('selected'));
        dom.trigger('change');
    }, 
    /** Handle Animated Logo, Section Change */
    triggerSectionAnimateLogo: function (el) {
        var value = el.target.value;
        jQuery('#setting-form .bg-cover-image img').attr('class', "animate__animated animate__".concat(value));
    }, 
    /** Trigger Reset Option Value */
    triggerOptionSettingValue: function () {
        jQuery('.option_settings').change(function () {
            var key = jQuery(this).data('option'), val = (jQuery(this).is(':checked')) ? 1 : 0;
            jQuery("#".concat(key)).val(val);
        });
    }, 
    /** Trigger Reset Option Button */
    triggerResetOptionButton: function () {
        jQuery('.reset-option').click(function () {
            jQuery.confirm({
                icon: 'fas fa-sync',
                closeIcon: true,
                animation: 'scale',
                columnClass: 'j-small',
                title: 'Reset',
                content: jQuery('#clear-config').html(),
                buttons: {
                    confirm: function () {
                        jQuery('#clear-config-form ').submit();
                    },
                    cancel: function () { }
                }
            });
        });
    }, 
    /**
     * Animate UI Component
     * @params     object      Selector object that would like to be animated
     * @params     string      Type of animation in a form of string class 'animated bounce'
     * */
    animate: function (selector, animation) {
        jQuery(selector).addClass(animation);
        jQuery(selector).on('animationend', function () { jQuery(selector).removeClass(animation); });
        return jQuery(selector);
    }, 
    /**
     * Convert given string into camel case
     * @params     string      String to be camelize
     * */
    camelize: function (text, separator) {
        if (separator === void 0) { separator = "_"; }
        return text.split(separator)
            .map(function (w) { return w.replace(/./, function (m) { return m.toUpperCase(); }); })
            .join();
    }, 
    /** Additional function for wpautop */
    _autop_newline_preservation_helper: function (matches) {
        return matches[0].replace("\n", "<WPPreserveNewline />");
    }, 
    /** Javascript version of wpautop */
    wpautop: function (pee, br) {
        if (typeof (br) === 'undefined') {
            br = true;
        }
        var pre_tags = {};
        if (pee.trim() === '') {
            return '';
        }
        pee = pee + "\n"; // just to make things a little easier, pad the end
        if (pee.indexOf('<pre') > -1) {
            var pee_parts = pee.split('</pre>');
            var last_pee = pee_parts.pop();
            pee = '';
            pee_parts.forEach(function (pee_part, index) {
                var start = pee_part.indexOf('<pre');
                // Malformed html?
                if (start === -1) {
                    pee += pee_part;
                    return;
                }
                var name = "<pre wp-pre-tag-" + index + "></pre>";
                pre_tags[name] = pee_part.substr(start) + '</pre>';
                pee += pee_part.substr(0, start) + name;
            });
            pee += last_pee;
        }
        pee = pee.replace(/<br \/>\s*<br \/>/, "\n\n");
        // Space things out a little
        var allblocks = '(?:table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary)';
        pee = pee.replace(new RegExp('(<' + allblocks + '[^>]*>)', 'gmi'), "\n$1");
        pee = pee.replace(new RegExp('(</' + allblocks + '>)', 'gmi'), "$1\n\n");
        pee = pee.replace(/\r\n|\r/, "\n"); // cross-platform newlines
        if (pee.indexOf('<option') > -1) {
            // no P/BR around option
            pee = pee.replace(/\s*<option'/gmi, '<option');
            pee = pee.replace(/<\/option>\s*/gmi, '</option>');
        }
        if (pee.indexOf('</object>') > -1) {
            // no P/BR around param and embed
            pee = pee.replace(/(<object[^>]*>)\s*/gmi, '$1');
            pee = pee.replace(/\s*<\/object>/gmi, '</object>');
            pee = pee.replace(/\s*(<\/?(?:param|embed)[^>]*>)\s*/gmi, '$1');
        }
        if (pee.indexOf('<source') > -1 || pee.indexOf('<track') > -1) {
            // no P/BR around source and track
            pee = pee.replace(/([<\[](?:audio|video)[^>\]]*[>\]])\s*/gmi, '$1');
            pee = pee.replace(/\s*([<\[]\/(?:audio|video)[>\]])/gmi, '$1');
            pee = pee.replace(/\s*(<(?:source|track)[^>]*>)\s*/gmi, '$1');
        }
        pee = pee.replace(/\n\n+/gmi, "\n\n"); // take care of duplicates
        // make paragraphs, including one at the end
        var pees = pee.split(/\n\s*\n/);
        pee = '';
        pees.forEach(function (tinkle) {
            pee += '<p>' + tinkle.replace(/^\s+|\s+$/g, '') + "</p>\n";
        });
        pee = pee.replace(/<p>\s*<\/p>/gmi, ''); // under certain strange conditions it could create a P of entirely whitespace
        pee = pee.replace(/<p>([^<]+)<\/(div|address|form)>/gmi, "<p>$1</p></$2>");
        pee = pee.replace(new RegExp('<p>\s*(</?' + allblocks + '[^>]*>)\s*</p>', 'gmi'), "$1", pee); // don't pee all over a tag
        pee = pee.replace(/<p>(<li.+?)<\/p>/gmi, "$1"); // problem with nested lists
        pee = pee.replace(/<p><blockquote([^>]*)>/gmi, "<blockquote$1><p>");
        pee = pee.replace(/<\/blockquote><\/p>/gmi, '</p></blockquote>');
        pee = pee.replace(new RegExp('<p>\s*(</?' + allblocks + '[^>]*>)', 'gmi'), "$1");
        pee = pee.replace(new RegExp('(</?' + allblocks + '[^>]*>)\s*</p>', 'gmi'), "$1");
        if (br) {
            pee = pee.replace(/<(script|style)(?:.|\n)*?<\/\\1>/gmi, window.FAB_PLUGIN._autop_newline_preservation_helper); // /s modifier from php PCRE regexp replaced with (?:.|\n)
            pee = pee.replace(/(<br \/>)?\s*\n/gmi, "<br />\n"); // optionally make line breaks
            pee = pee.replace('<WPPreserveNewline />', "\n");
        }
        pee = pee.replace(new RegExp('(</?' + allblocks + '[^>]*>)\s*<br />', 'gmi'), "$1");
        pee = pee.replace(/<br \/>(\s*<\/?(?:p|li|div|dl|dd|dt|th|pre|td|ul|ol)[^>]*>)/gmi, '$1');
        pee = pee.replace(/\n<\/p>$/gmi, '</p>');
        if (Object.keys(pre_tags).length) {
            pee = pee.replace(new RegExp(Object.keys(pre_tags).join('|'), "gi"), function (matched) {
                return pre_tags[matched];
            });
        }
        return pee;
    }, 
    /**
     * Check wether given string is valid
     * @params     string      String to be check
     * */
    isEmail: function (email) {
        var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
    }, 
    /** Check function is numeric */
    isNumeric: function (str) {
        if (typeof str !== "string") {
            return false;
        } // we only process strings!
        return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...
            !isNaN(parseFloat(str)); // ...and ensure strings of whitespace fail
    }, 
    /**
     * Validate form before submission
     * @params     object      Required form specs before it can be submitted
     * @params     object      Form object array containing values which will be validated
     * */
    validate_form: function (specs, states) {
        var validation = { status: true, message: '' };
        /** Setup Message function */
        var setupMessage = function (fieldName, extras) {
            if (extras === void 0) { extras = ''; }
            var message = fieldName.split('_');
            message.splice(0, 1);
            message = window.FAB_PLUGIN.camelize(message.join('_')).replace(',', ' ');
            return message + extras;
        };
        /** Validation process */
        specs.required.some(function (spec) {
            /** Locate Element */
            var element = { position: -1, value: '' };
            states.some(function (state, index) {
                if (state.name === spec) {
                    element.position = index;
                    element.value = state.value;
                    return true;
                }
            });
            /** Validate required fields */
            if (element.position === -1 || !element.value) {
                validation.status = false;
                validation.message = (specs.messages && specs.messages[spec]) ? specs.messages[spec] :
                    setupMessage(spec, ' field is required!');
                return true;
            }
            /** Validate fields type */
            else if (specs.types && specs.types[spec]) {
                if (specs.types[spec] === 'email' && !window.FAB_PLUGIN.isEmail(element.value)) {
                    validation.status = false;
                    validation.message = (specs.messages && specs.messages[spec]) ? specs.messages[spec] :
                        setupMessage(spec, " field is not valid! Please input valid email address!");
                }
                else if (specs.types[spec] === 'integer' && !isNaN(parseInt(specs.types[spec]))) {
                    validation.status = false;
                    validation.message = (specs.messages && specs.messages[spec]) ? specs.messages[spec] :
                        setupMessage(spec, " field is not valid! Please input valid integer number!");
                }
                if (!validation.status) {
                    return true;
                }
            }
        });
        return validation;
    }, 
    /** Smooth Scroll To with Duration */
    scrollTo: function (element, to, duration) {
        var start = element.scrollTop, change = to - start, currentTime = 0, increment = 20;
        var easeInOutQuad = function (t, b, c, d) {
            t /= d / 2;
            if (t < 1)
                return c / 2 * t * t + b;
            t--;
            return -c / 2 * (t * (t - 2) - 1) + b;
        };
        var animateScroll = function () {
            currentTime += increment;
            var val = easeInOutQuad(currentTime, start, change, duration);
            element.scrollTop = val;
            if (currentTime < duration) {
                setTimeout(animateScroll, increment);
            }
        };
        animateScroll();
    }, 
    /** Animate CSS (https://animate.style/) - Animation */
    animateCSSAnimation: [
        { id: '', text: 'None' },
        {
            text: 'Attention Seekers',
            children: [
                { id: 'bounce', text: 'bounce' },
                { id: 'flash', text: 'flash' },
                { id: 'pulse', text: 'pulse' },
                { id: 'rubberBand', text: 'rubberBand' },
                { id: 'shakeX', text: 'shakeX' },
                { id: 'shakeY', text: 'shakeY' },
                { id: 'headShake', text: 'headShake' },
                { id: 'swing', text: 'swing' },
                { id: 'tada', text: 'tada' },
                { id: 'wobble', text: 'wobble' },
                { id: 'jello', text: 'jello' },
                { id: 'heartBeat', text: 'heartBeat' },
            ]
        },
        {
            text: 'Back entrances',
            children: [
                { id: 'backInDown', text: 'backInDown' },
                { id: 'backInLeft', text: 'backInLeft' },
                { id: 'backInRight', text: 'backInRight' },
                { id: 'backInUp', text: 'backInUp' },
            ]
        },
        {
            text: 'Back exits',
            children: [
                { id: 'backOutDown', text: 'backOutDown' },
                { id: 'backOutLeft', text: 'backOutLeft' },
                { id: 'backOutRight', text: 'backOutRight' },
                { id: 'backOutUp', text: 'backOutUp' },
            ]
        },
        {
            text: 'Bouncing entrances',
            children: [
                { id: 'bounceIn', text: 'bounceIn' },
                { id: 'bounceInDown', text: 'bounceInDown' },
                { id: 'bounceInLeft', text: 'bounceInLeft' },
                { id: 'bounceInRight', text: 'bounceInRight' },
                { id: 'bounceInUp', text: 'bounceInUp' },
            ]
        },
        {
            text: 'Bouncing exits',
            children: [
                { id: 'bounceOut', text: 'bounceOut' },
                { id: 'bounceOutDown', text: 'bounceOutDown' },
                { id: 'bounceOutLeft', text: 'bounceOutLeft' },
                { id: 'bounceOutRight', text: 'bounceOutRight' },
                { id: 'bounceOutUp', text: 'bounceOutUp' },
            ]
        },
        {
            text: 'Fading entrances',
            children: [
                { id: 'fadeIn', text: 'fadeIn' },
                { id: 'fadeInDown', text: 'fadeInDown' },
                { id: 'fadeInDownBig', text: 'fadeInDownBig' },
                { id: 'fadeInLeft', text: 'fadeInLeft' },
                { id: 'fadeInLeftBig', text: 'fadeInLeftBig' },
                { id: 'fadeInRight', text: 'fadeInRight' },
                { id: 'fadeInRightBig', text: 'fadeInRightBig' },
                { id: 'fadeInUp', text: 'fadeInUp' },
                { id: 'fadeInUpBig', text: 'fadeInUpBig' },
                { id: 'fadeInTopLeft', text: 'fadeInTopLeft' },
                { id: 'fadeInTopRight', text: 'fadeInTopRight' },
                { id: 'fadeInBottomLeft', text: 'fadeInBottomLeft' },
                { id: 'fadeInBottomRight', text: 'fadeInBottomRight' },
            ]
        },
        {
            text: 'Fading exits',
            children: [
                { id: 'fadeOut', text: 'fadeOut' },
                { id: 'fadeOutDown', text: 'fadeOutDown' },
                { id: 'fadeOutDownBig', text: 'fadeOutDownBig' },
                { id: 'fadeOutLeft', text: 'fadeOutLeft' },
                { id: 'fadeOutLeftBig', text: 'fadeOutLeftBig' },
                { id: 'fadeOutRight', text: 'fadeOutRight' },
                { id: 'fadeOutRightBig', text: 'fadeOutRightBig' },
                { id: 'fadeOutUp', text: 'fadeOutUp' },
                { id: 'fadeOutUpBig', text: 'fadeOutUpBig' },
                { id: 'fadeOutTopLeft', text: 'fadeOutTopLeft' },
                { id: 'fadeOutTopRight', text: 'fadeOutTopRight' },
                { id: 'fadeOutBottomRight', text: 'fadeOutBottomRight' },
                { id: 'fadeOutBottomLeft', text: 'fadeOutBottomLeft' },
            ]
        },
        {
            text: 'Flippers',
            children: [
                { id: 'flip', text: 'flip' },
                { id: 'flipInX', text: 'flipInX' },
                { id: 'flipInY', text: 'flipInY' },
                { id: 'flipOutX', text: 'flipOutX' },
                { id: 'flipOutY', text: 'flipOutY' },
            ]
        },
        {
            text: 'Lightspeed',
            children: [
                { id: 'lightSpeedInRight', text: 'lightSpeedInRight' },
                { id: 'lightSpeedInLeft', text: 'lightSpeedInLeft' },
                { id: 'lightSpeedOutRight', text: 'lightSpeedOutRight' },
                { id: 'lightSpeedOutLeft', text: 'lightSpeedOutLeft' },
            ]
        },
        {
            text: 'Rotating entrances',
            children: [
                { id: 'rotateIn', text: 'rotateIn' },
                { id: 'rotateInDownLeft', text: 'rotateInDownLeft' },
                { id: 'rotateInDownRight', text: 'rotateInDownRight' },
                { id: 'rotateInUpLeft', text: 'rotateInUpLeft' },
                { id: 'rotateInUpRight', text: 'rotateInUpRight' },
            ]
        },
        {
            text: 'Rotating exits',
            children: [
                { id: 'rotateOut', text: 'rotateOut' },
                { id: 'rotateOutDownLeft', text: 'rotateOutDownLeft' },
                { id: 'rotateOutDownRight', text: 'rotateOutDownRight' },
                { id: 'rotateOutUpLeft', text: 'rotateOutUpLeft' },
                { id: 'rotateOutUpRight', text: 'rotateOutUpRight' },
            ]
        },
        {
            text: 'Specials',
            children: [
                { id: 'hinge', text: 'hinge' },
                { id: 'jackInTheBox', text: 'jackInTheBox' },
                { id: 'rollIn', text: 'rollIn' },
                { id: 'rollOut', text: 'rollOut' },
            ]
        },
        {
            text: 'Zooming entrances',
            children: [
                { id: 'zoomIn', text: 'zoomIn' },
                { id: 'zoomInDown', text: 'zoomInDown' },
                { id: 'zoomInLeft', text: 'zoomInLeft' },
                { id: 'zoomInRight', text: 'zoomInRight' },
                { id: 'zoomInUp', text: 'zoomInUp' },
            ]
        },
        {
            text: 'Zooming exits',
            children: [
                { id: 'zoomOut', text: 'zoomOut' },
                { id: 'zoomOutDown', text: 'zoomOutDown' },
                { id: 'zoomOutLeft', text: 'zoomOutLeft' },
                { id: 'zoomOutRight', text: 'zoomOutRight' },
                { id: 'zoomOutUp', text: 'zoomOutUp' },
            ]
        },
        {
            text: 'Sliding entrances',
            children: [
                { id: 'slideInDown', text: 'slideInDown' },
                { id: 'slideInLeft', text: 'slideInLeft' },
                { id: 'slideInRight', text: 'slideInRight' },
                { id: 'slideInUp', text: 'slideInUp' },
            ]
        },
        {
            text: 'Sliding exits',
            children: [
                { id: 'slideOutDown', text: 'slideOutDown' },
                { id: 'slideOutLeft', text: 'slideOutLeft' },
                { id: 'slideOutRight', text: 'slideOutRight' },
                { id: 'slideOutUp', text: 'slideOutUp' },
            ]
        },
    ] });


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/ts/backend/plugin.ts"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=plugin.min.js.map